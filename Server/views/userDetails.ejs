<!DOCTYPE html>
<html lang="en" ng-app="userDetails">
<head>
    <meta charset="UTF-8">
    <title>Details</title>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular-route.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular-animate.min.js"></script>
    <script type="text/javascript" src="../views/js/moment/min/moment.min.js"></script>
    <script type="text/javascript" src="../views/js/progressbar.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular-aria.js"></script>
    <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/angular_material/1.1.0/angular-material.min.css">
    <script src="http://ajax.googleapis.com/ajax/libs/angular_material/1.1.0/angular-material.min.js"></script>
    <link rel="stylesheet" href="http://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="../views/css/userstyle.css">

</head>
<body ng-controller="userDet-ctrl">
<md-toolbar layout="row">
    <div class="md-toolbar-tools">
        <h2>WHP</h2>
        <a href="/redirectSupporterPage?name={{user.details.supporter}}" style="font-size: medium;margin-left:30px">Home</a>
        <span flex></span>
        <md-button flex="10" ng-click="logout()">Logout</md-button>
    </div>
</md-toolbar>
<div class="container-fluid">
    <div class="row profile">
        <div class="col-md-3">
            <div class="profile-sidebar">
                <!-- SIDEBAR USER TITLE -->
                <div class="profile-usertitle">
                    <div class="profile-usertitle-name">
                        {{user.username}}
                    </div>
                </div>
                <!-- END SIDEBAR USER TITLE -->
                <!-- SIDEBAR MENU -->
                <div class="profile-usermenu">
                    <ul class="nav">
                        <li class="active">
                            <a href="#daily">
                                <i class="glyphicon glyphicon-list"></i>
                                Daily </a>
                        </li>
                        <li>
                            <a href="#weekly">
                                <i class="glyphicon glyphicon-th"></i>
                                Weekly </a>
                        </li>
                        <li>
                            <a href="#challenges">
                                <i class="glyphicon glyphicon-tasks"></i>
                                Challenges </a>
                        </li>
                        <li>
                            <a href="#progress">
                                <i class="glyphicon glyphicon-flag"></i>
                                Progress </a>
                        </li>
                        <li>
                            <a href="#appointments">
                                <i class="glyphicon glyphicon-calendar"></i>
                                Appointments </a>
                        </li>
                        <!--li>
                            <a href="#settings">
                                <i class="glyphicon glyphicon-cog"></i>
                                Settings </a>
                        </li-->
                    </ul>
                </div>
                <!-- END MENU -->
            </div>
        </div>
        <div class="col-md-9">
            <div ng-view class="profile-content">
                <img src="http://www.webdesignhot.com/wp-content/uploads/2013/10/Abstract-Blue-Color-Design-Vector-Background-Graphic.jpg">
            </div>
        </div>
    </div>
</div>
<script>
    /*var info = JSON.parse();
    console.log(info);*/
    angular.module('userDetails',['ngRoute','ngMaterial','ngAria'])
            .config(function($routeProvider,$mdThemingProvider){
                $mdThemingProvider.definePalette('amazingPaletteName', {
                    '50': '#4dffdb',
                    '100': '#33ffd6',
                    '200': '#1affd1',
                    '300': '#00ffcc',
                    '400': '#00e6b7',
                    '500': '#00cca3',
                    '600': '#00b38f',
                    '700': '#00997a',
                    '800': '#008066',
                    '900': '#006652',
                    'A100': '#66ffe0',
                    'A200': '#80ffe5',
                    'A400': '#99ffeb',
                    'A700': '#004d3d',
                    'contrastDefaultColor': 'light'
                });


                $mdThemingProvider.theme('default')
                        .primaryPalette('amazingPaletteName');
        $routeProvider
                .when('/daily', {
                    templateUrl: '../views/dailyReport.html',
                    controller: 'userDaily-ctrl'
                })
                .when('/weekly', {
                    templateUrl: '../views/weeklyReport.html',
                    controller: 'userWeekly-ctrl'
                })
                .when('/challenges', {
                    templateUrl: '../views/challenges.html',
                    controller: 'userChallenge-ctrl'
                })
                .when('/progress', {
                    templateUrl: '../views/progress.html',
                    controller: 'userProgress-ctrl'
                })
                .when('/appointments', {
                    templateUrl: '../views/appointment.html',
                    controller: 'userAppointment-ctrl'
                })
                .when('/settings', {
                    templateUrl: '../views/settings.html'
                    //controller: 'UserReg-ctrl'
                })


    })
            .controller('userDet-ctrl', function ($scope, $window, $http) {
                location.href="#daily"
                $scope.user = JSON.parse($window.sessionStorage.getItem("curUser"));
                console.log($scope.user);
                $scope.logout = function () {
                    location.href = '/user/logout';
                }
                $(document).on('click', '.profile-usermenu ul li', function() {
                    $(".profile-usermenu ul li").removeClass("active");
                    $(this).addClass("active");
                });
            })
            .controller('userDaily-ctrl', function ($scope, $http) {
                $http({
                    method:"POST",
                    url:'/activity/getUserDailyActivityLog',
                    data:{username:$scope.user.username}
                }).then(function successCallback(response) {
                    console.log(response.data);
                    if(response.data.result ==undefined){
                        $scope.message = "There are no logs to show";
                    }
                    else{
                        $scope.foodActivity = response.data.result.foodActivityLog;
                        $scope.physicalActivity = response.data.result.physicalActivityLog;
                    }

                },function errorCallback(response) {
                    $window.alert("error");
                });
            })

            .controller('userWeekly-ctrl', function ($scope, $http) {
                $http({
                    method:"POST",
                    url:'/activity/getUserWeeklyActivityLog',
                    data:{username:$scope.user.username}
                }).then(function successCallback(response) {
                    console.log(response.data);
                    if(response.data.result ==undefined){
                        $scope.message = "There are no logs to show";
                    }
                    else{
                        $scope.weeklyActivity = response.data.result.weeklyLog;
                    }
                },function errorCallback(response) {
                    $window.alert("error");
                });
            })

            .controller('userProgress-ctrl', function ($scope,$http,$window,$filter) {
                $http({
                    method:"POST",
                    url:'/steps/getUserSteps',
                    data:{username:$scope.user.username}
                }).then(function successCallback(response) {
                    $scope.currStep = $scope.user.details.currentStep;
                    $scope.next = true;
                    var info = response.data.result[0].steps;
                    $scope.stepinfo = $filter("filter")(info, {name:$scope.currStep})[0];
                    console.log($scope.stepinfo);
                    if($scope.stepinfo.status=="Waiting"){
                        $scope.next = false;
                    }
                    $scope.completed = parseInt($scope.currStep.charAt($scope.currStep.length-1));
                    var percent = $scope.completed/8;

                    var bar = new ProgressBar.Circle(container, {
                        color: '#aaa',
                        // This has to be the same size as the maximum width to
                        // prevent clipping
                        strokeWidth:4,
                        trailWidth: 1,
                        easing: 'easeInOut',
                        duration: 1400,
                        text: {
                            autoStyleContainer: false
                        },
                        from: { color: '#aaa', width: 1 },
                        to: { color: '#333', width: 4 },
                        // Set default step function for all animate calls
                        step: function(state, circle) {
                            circle.path.setAttribute('stroke', state.color);
                            circle.path.setAttribute('stroke-width', state.width);

                            var value = Math.round(circle.value() * 100);
                            if (value === 0) {
                                circle.setText('');
                            } else {
                                circle.setText(value+"%");
                            }

                        }
                    });
                    bar.text.style.fontFamily = '"Raleway", Helvetica, sans-serif';
                    bar.text.style.fontSize = '2rem';

                    bar.animate(percent);  // Number from 0.0 to 1.0
                },function errorCallback(response) {
                    $window.alert("error");
                });

                $scope.promote = function () {
                    var count = $scope.completed;
                    count++;
                    var next_step = "step"+count;
                    if($scope.completed<=7){
                        $http({
                            method:"POST",
                            url:'/steps/assignStep',
                            data:{username:$scope.user.username,step:next_step}
                        }).then(function successCallback(response) {
                            console.log(response.data);
                            $window.location.reload(true);
                            //$scope.userdata = response.data;
                        },function errorCallback(response) {
                            $window.alert("error");
                        });
                    }
                }

            })
            .controller('userChallenge-ctrl', function ($scope, $http,$window, $mdDialog) {
                $scope.count = 1;
                $scope.challenges = null;
                $http({
                    method:"POST",
                    url:'/challenge/getUserChallenge',
                    data:{username:$scope.user.username}
                }).then(function successCallback(response) {
                    if(response.data.result){
                        $scope.challenges = response.data.result.challenges;
                        $scope.count++;
                    }
                },function errorCallback(response) {
                    console.log(response);
                });
                $scope.create = function(){
                    if($scope.challenge!=null){
                        $http({
                            method:"POST",
                            url:'/challenge/createChallenge',
                            data:{username:$scope.user.username,challenge:$scope.challenge,challengeNumber:$scope.count}
                        }).then(function successCallback(response) {
                            //console.log(response.data);
                            $window.location.reload();
                        },function errorCallback(response) {
                            $window.alert("error");
                        });
                    }

                };

                $scope.challengeEdit = function (number,challenge) {
                    $mdDialog.show({
                        controller: DialogController,
                        templateUrl: 'edit.html',
                        parent: angular.element(document.body),
                        clickOutsideToClose:true,
                        locals : {
                            user:$scope.user.username,
                            challengeNumber: number,
                            challenge:challenge
                        }
                    })
                };

                function DialogController($scope, $mdDialog, user, challengeNumber, challenge) {
                    $scope.user = {};
                    $scope.user.username = user;
                    $scope.user.challengeNumber = challengeNumber;
                    $scope.user.challenge = challenge;
                    $scope.cancel = function() {
                        $mdDialog.cancel();
                    };

                }

            })
            .controller('userAppointment-ctrl', function ($scope,$http,$window,$filter,$mdDialog) {
                $http({
                    method:"POST",
                    url:'/appointment/getUserAppointments',
                    data:{username:$scope.user.username}
                }).then(function successCallback(response) {
                    console.log(response.data);
                    if(response.data.result!=undefined){
                        $scope.allAppointments = response.data.result.supporterAppointments[0].userAppointments;
                        $scope.completedAppointments = $filter("filter")($scope.allAppointments, {status:"Completed"});
                        $scope.upcomingAppointments = $filter("filter")($scope.allAppointments, {status:"Created"});
                        if($scope.completedAppointments.length==0){
                            $scope.message1 = "No Completed Appointments";
                        }
                        else if($scope.upcomingAppointments.length==0){
                            $scope.message2 = "No Upcoming Appointments";
                        }
                    }
                    else{
                        $scope.message1 = "No Completed Appointments";
                        $scope.message2 = "No Upcoming Appointments";
                    }

                    //console.log($scope.completed);
                },function errorCallback(response) {
                    $window.alert("error");
                });

                $scope.editAppoint = function (date) {
                    console.log($scope.data);
                    if(date){
                        /*$http({
                            method:"POST",
                            url:'/appointment/editUserAppointment',
                            data:{username:$scope.user.details.supporter,user:$scope.user.username,date:date,time:time,status:"Completed"}
                        }).then(function successCallback(response) {
                            console.log(response.data);
                            //$scope.userdata = response.data;
                        },function errorCallback(response) {
                            $window.alert("error");
                        });*/
                    }
                }

                $scope.deleteAppoint = function () {
                    $http({
                        method:"POST",
                        url:'/appointment/deleteAppointment',
                        data:{username:$scope.user.username,role:"supporter"}
                    }).then(function successCallback(response) {
                        console.log(response.data);
                        //$scope.userdata = response.data;
                    },function errorCallback(response) {
                        $window.alert("error");
                    });
                }

            })
</script>
</body>
</html>